name: build

# Were we can define the inputs that our action will accept
inputs:
  registry:
    required: true
  registry_repo_name:
    required: true
  registry_username:
    required: true
  registry_password:
    required: true
  image_name:
    required: true

runs:
  using: "composite"
  steps:
    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ inputs.registry }}/${{ inputs.registry_repo_name }}/geoserver-cloud-${{ inputs.image_name }}

    - name: Set DEPLOY_ID which will deploy a custom deploy to 'dev' environment
      run: |
        echo "DEPLOY_ID=${{ steps.docker_meta.outputs.version }}" >> $GITHUB_OUTPUT
        echo "APP_VERSION=${{ fromJSON(steps.docker_meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_OUTPUT
        echo "APP_REVISION=${{ fromJSON(steps.docker_meta.outputs.json).labels['org.opencontainers.image.revision'] }}" >> $GITHUB_OUTPUT
      id: set-deploy-id

    - uses: actions/checkout@v2

    - name: Login to Artifactory
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ inputs.registry }}/${{ inputs.registry_repo_name }}/geoserver-cloud-${{ inputs.image_name }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        context: docker
        file: docker/Dockerfile.${{ inputs.image_name }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        build-args: |
          GITHUB_API_TOKEN=${{ secrets.REGISTRY_PASSWORD }}
          APP_VERSION=${{ steps.set-deploy-id.outputs.APP_VERSION }}
          APP_REVISION=${{ steps.set-deploy-id.outputs.APP_REVISION }}
